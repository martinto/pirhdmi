#!/usr/bin/env python3

import os
import sys
import subprocess
import time
import threading
from gpiozero import MotionSensor
from signal import pause
pir = MotionSensor(4)
KMSPRINT='/usr/bin/kmsprint'
XRANDR='/usr/bin/xrandr'
ON_TIME=120.0

def is_off():
    status = subprocess.check_output([KMSPRINT, "-p"]).decode("utf-8")
    if "    DPMS (2) = 0 (On) [On=0|Standby=1|Suspend=2|Off=3]" in status:
        return False
    else:
        return True

def hdmi_off():
    done=False
    while not done:
        try:
            subprocess.run([XRANDR, '--output', 'HDMI-1', '--off'], env=dict(os.environ, DISPLAY=":0", XAUTHORITY="/home/martin/.Xauthority"))
            print('hdmi_off', file=sys.stderr)
            done=True
        except:
            print('hdmi_off failed', file=sys.stderr)
            time.sleep(1)

def start_off_timer():
    try:
        global timer
        timer = threading.Timer(ON_TIME, lambda: hdmi_off())
        timer.start()
    except:
        print('start_off_timer failed', file=sys.stderr)

def restart_off_timer():
    try:
        global timer
        timer.cancel()
        start_off_timer()
    except:
        print('restart_off_timer failed', file=sys.stderr)

def hdmi_on():
    done=False
    while not done:
        try:
            if is_off():
                subprocess.run([XRANDR, '--output', 'HDMI-1', '--auto', '--rotate', 'left'], env=dict(os.environ, DISPLAY=":0", XAUTHORITY="/home/martin/.Xauthority"))
                print('hdmi_on', file=sys.stderr)
                start_off_timer()
            else:
                restart_off_timer()
            done=True
        except:
            print('hdmi_on failed', file=sys.stderr)
            time.sleep(1)

pir.when_motion = lambda : hdmi_on()

start_off_timer()
pause()
